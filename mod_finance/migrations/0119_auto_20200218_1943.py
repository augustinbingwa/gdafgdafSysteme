# Generated by Django 2.0.7 on 2020-02-18 17:43

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mod_finance.submodels.model_imposition


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('mod_crm', '0006_auto_20190110_1254'),
        ('mod_finance', '0118_auto_20190416_1454'),
    ]

    operations = [
        migrations.CreateModel(
            name='NoteImpositionDelete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=25, unique=True)),
                ('entity', models.PositiveSmallIntegerField(choices=[(10, 'Django-Model:FoncierParcelle'), (2, 'Django-Model:Marche'), (13, 'Django-Model:VehiculeProprietaire'), (15, 'Django-Model:FoncierParcelleDuplicata'), (16, 'Django-Model:VehiculeActiviteDuplicata'), (8, 'Django-Model:AllocationPlaceMarche'), (9, 'Location batiments municipaux'), (6, 'Django-Model:AllocationPanneauPublicitaire'), (5, 'Django-Model:AllocationEspacePublique'), (17, 'Django-Model:VehiculeProprietaireDuplicata'), (18, 'Django-Model:BetailsPropriete'), (11, 'Django-Model:VehiculeActivite'), (3, 'Django-Model:ActiviteExceptionnel'), (1, 'Django-Model:Standard'), (7, 'Django-Model:PubliciteMurCloture'), (4, 'Django-Model:VisiteSiteTouristique'), (12, 'Django-Model:VehiculeActivite'), (14, 'Django-Model:BaseActiviteDuplicata')], null=True)),
                ('entity_id', models.IntegerField(null=True)),
                ('annee', models.PositiveSmallIntegerField(default=2020, validators=[django.core.validators.MinValueValidator(2014), django.core.validators.MaxValueValidator(9999)])),
                ('libelle', models.TextField(max_length=1024)),
                ('taxe_montant', models.DecimalField(decimal_places=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('taxe_montant_paye', models.DecimalField(decimal_places=0, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('etat', models.BooleanField(default=True)),
                ('numero_carte_physique', models.CharField(blank=True, max_length=10, null=True)),
                ('nombre_impression', models.PositiveSmallIntegerField(default=0)),
                ('date_create', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(null=True)),
                ('date_validate', models.DateTimeField(null=True)),
                ('date_print', models.DateTimeField(null=True)),
                ('date_delete', models.DateTimeField(null=True)),
                ('motif_delete', models.TextField(blank=True, max_length=1024, null=True)),
                ('paiement_externe_file', models.FileField(null=True, upload_to=mod_finance.submodels.model_imposition.path_bordereau_ni_file_externe)),
                ('contribuable', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mod_crm.Contribuable')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.AlterField(
            model_name='avisimposition',
            name='entity',
            field=models.PositiveSmallIntegerField(choices=[(10, 'Django-Model:FoncierParcelle'), (2, 'Django-Model:Marche'), (13, 'Django-Model:VehiculeProprietaire'), (15, 'Django-Model:FoncierParcelleDuplicata'), (16, 'Django-Model:VehiculeActiviteDuplicata'), (8, 'Django-Model:AllocationPlaceMarche'), (9, 'Location batiments municipaux'), (6, 'Django-Model:AllocationPanneauPublicitaire'), (5, 'Django-Model:AllocationEspacePublique'), (17, 'Django-Model:VehiculeProprietaireDuplicata'), (18, 'Django-Model:BetailsPropriete'), (11, 'Django-Model:VehiculeActivite'), (3, 'Django-Model:ActiviteExceptionnel'), (1, 'Django-Model:Standard'), (7, 'Django-Model:PubliciteMurCloture'), (4, 'Django-Model:VisiteSiteTouristique'), (12, 'Django-Model:VehiculeActivite'), (14, 'Django-Model:BaseActiviteDuplicata')], null=True),
        ),
        migrations.AlterField(
            model_name='noteimposition',
            name='annee',
            field=models.PositiveSmallIntegerField(default=2020, validators=[django.core.validators.MinValueValidator(2014), django.core.validators.MaxValueValidator(9999)]),
        ),
        migrations.AlterField(
            model_name='noteimposition',
            name='entity',
            field=models.PositiveSmallIntegerField(choices=[(10, 'Django-Model:FoncierParcelle'), (2, 'Django-Model:Marche'), (13, 'Django-Model:VehiculeProprietaire'), (15, 'Django-Model:FoncierParcelleDuplicata'), (16, 'Django-Model:VehiculeActiviteDuplicata'), (8, 'Django-Model:AllocationPlaceMarche'), (9, 'Location batiments municipaux'), (6, 'Django-Model:AllocationPanneauPublicitaire'), (5, 'Django-Model:AllocationEspacePublique'), (17, 'Django-Model:VehiculeProprietaireDuplicata'), (18, 'Django-Model:BetailsPropriete'), (11, 'Django-Model:VehiculeActivite'), (3, 'Django-Model:ActiviteExceptionnel'), (1, 'Django-Model:Standard'), (7, 'Django-Model:PubliciteMurCloture'), (4, 'Django-Model:VisiteSiteTouristique'), (12, 'Django-Model:VehiculeActivite'), (14, 'Django-Model:BaseActiviteDuplicata')], null=True),
        ),
        migrations.AlterField(
            model_name='periode',
            name='element',
            field=models.IntegerField(choices=[(12, 'DECEMBRE'), (8, 'AOUT'), (10, 'OCTOBRE'), (3, 'MARS'), (7, 'JUILLET'), (19, 'ANNEE'), (9, 'SEPTEMBRE'), (11, 'NOVEMBRE'), (13, '1er TRIMESTRE'), (6, 'JUIN'), (4, 'AVRIL'), (14, '2e TRIMESTRE'), (17, '1er SEMESTRE'), (18, '2e SEMESTRE'), (15, '3e TRIMESTRE'), (5, 'MAI'), (16, '4e TRIMESTRE'), (1, 'JANVIER'), (2, 'FEVRIER')], verbose_name='Elements de période'),
        ),
        migrations.AlterField(
            model_name='periodetype',
            name='categorie',
            field=models.IntegerField(choices=[(2, 'Trimestrielle'), (1, 'Mensuelle'), (3, 'Semestrielle'), (4, 'Annuelle'), (0, 'Autre')], default=0, verbose_name='catégorie de périodes'),
        ),
        migrations.AddField(
            model_name='noteimpositiondelete',
            name='periode',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mod_finance.Periode'),
        ),
        migrations.AddField(
            model_name='noteimpositiondelete',
            name='taxe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mod_finance.Taxe'),
        ),
        migrations.AddField(
            model_name='noteimpositiondelete',
            name='user_create',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='noteimpositiondelete_requests_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='noteimpositiondelete',
            name='user_delete',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='noteimpositiondelete_requests_delete', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='noteimpositiondelete',
            name='user_print',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='noteimpositiondelete_requests_print', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='noteimpositiondelete',
            name='user_update',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='noteimpositiondelete_requests_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='noteimpositiondelete',
            name='user_validate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='noteimpositiondelete_requests_validate', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='noteimpositiondelete',
            unique_together={('entity', 'entity_id', 'periode', 'annee')},
        ),
        migrations.AlterIndexTogether(
            name='noteimpositiondelete',
            index_together={('entity', 'entity_id', 'periode', 'annee')},
        ),
    ]
